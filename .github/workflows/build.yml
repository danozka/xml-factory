name: Build and Package Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4.9.1
        with:
          python-version: ${{ vars.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest --cov

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [ ${{ vars.PYTHON_VERSION }} ]
        include:
          - os: windows-latest
            platform: windows
            architecture: amd64
            artifact_name: xml-factory-windows-amd64.exe
            asset_name: xml-factory-windows-amd64.exe
            pyinstaller_args: --onefile --name xml-factory-windows-amd64

          - os: ubuntu-latest
            platform: linux
            architecture: amd64
            artifact_name: xml-factory-linux-amd64
            asset_name: xml-factory-linux-amd64
            pyinstaller_args: --onefile --name xml-factory-linux-amd64

          - os: macos-latest
            platform: macos
            architecture: amd64
            artifact_name: xml-factory-macos-amd64
            asset_name: xml-factory-macos-amd64
            pyinstaller_args: --onefile --name xml-factory-macos-amd64

          - os: macos-latest
            platform: macos
            architecture: arm64
            artifact_name: xml-factory-macos-arm64
            asset_name: xml-factory-macos-arm64
            pyinstaller_args: --onefile --name xml-factory-macos-arm64 --target-architecture arm64

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.9.1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture == 'amd64' && 'x64' || matrix.architecture }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    
    - name: Build with PyInstaller
      run: |
        pyinstaller ${{ matrix.pyinstaller_args }} src/main.py
    
    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.asset_name }}
